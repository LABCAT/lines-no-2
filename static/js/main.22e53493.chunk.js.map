{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/functions/ShuffleArray.js","js/classes/AnimatedLine.js","js/classes/AnimatedLineSegments.js","audio/lines-no-2.ogg","audio/lines-no-2.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","ShuffleArray","AnimatedLine","beginX","beginY","endX","endY","lifetime","fromColour","toColour","canDraw","this","p","color","distX","distY","x","y","pointIndex","setLifeTime","frameRate","getFrameRate","totalsFrames","lerpColor","noStroke","i","pow","ellipse","AnimatedLineSegments","currentFrame","alpha","setAlpha","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","tempo","barAsSeconds","grid","randomColours","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","noteSet2","scheduleCueSet","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","length","note","ticks","time","addCue","animatedLinesDrawings1","animatedLinesDrawings2","setup","createCanvas","background","rectMode","CENTER","randomColor","require","luminosity","format","count","draw","isPlaying","lineSet","scale","translateX","translateY","lines","push","translate","j","pop","currentIndex","executeCueSet1","currentCell","random","duration","randomColours2","beginX2","beginY2","endX2","endY2","currentIndex2","executeCueSet2","mousePressed","pause","parseInt","currentTime","buffer","reset","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.22e53493.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","function ShuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default ShuffleArray;\n","export default class AnimatedLine {\n    constructor(p5, beginX, beginY, endX, endY, lifetime, fromColour, toColour, canDraw = true) {\n        this.p = p5;\n        this.beginX = beginX; \n        this.beginY = beginY;\n        this.endX = endX; \n        this.endY = endY; \n        this.fromColour = this.p.color(fromColour);\n        this.toColour = this.p.color(toColour);\n        this.distX = this.endX - this.beginX; // X-axis distance to move\n        this.distY = this.endY - this.beginY; // Y-axis distance to move\n        this.x = 0.0; // Current x-coordinate\n        this.y = 0.0; // Current y-coordinate\n        this.pointIndex = 0;\n        this.canDraw = canDraw;\n        this.setLifeTime(lifetime);\n    }\n\n    setLifeTime(lifetime) {\n        const frameRate = this.p.getFrameRate() ? this.p.getFrameRate() : 60;\n        this.totalsFrames = frameRate * lifetime;\n    }\n\n    draw() {\n        if(this.canDraw && this.pointIndex < 1.0) {\n            const fill = this.p.lerpColor(this.fromColour, this.toColour, this.pointIndex);\n            this.p.fill(fill);\n            this.p.noStroke();\n            for (let i = 0; i < 1000 / this.totalsFrames; i++) {\n                this.x = this.beginX + this.pointIndex * this.distX;\n                this.y = this.beginY + this.p.pow(this.pointIndex, 4) * this.distY;\n                this.p.ellipse(this.x, this.y, this.p.height/ 64, this.p.height/ 64);\n                this.pointIndex += 0.001;    \n            }\n            \n        }\n        \n    }\n}","export default class AnimatedLineSegments {\n    constructor(p5, beginX, beginY, endX, endY, lifetime, fromColour, toColour, canDraw = true) {\n        this.p = p5;\n        this.beginX = beginX; \n        this.beginY = beginY;\n        this.endX = endX; \n        this.endY = endY; \n        this.fromColour = this.p.color(fromColour);\n        this.toColour = this.p.color(toColour);\n        this.distX = this.endX - this.beginX; // X-axis distance to move\n        this.distY = this.endY - this.beginY; // Y-axis distance to move\n        this.x = 0.0; // Current x-coordinate\n        this.y = 0.0; // Current y-coordinate\n        this.pointIndex = 0;\n        this.canDraw = canDraw;\n        this.setLifeTime(lifetime);\n    }\n\n    setLifeTime(lifetime) {\n        const frameRate = this.p.getFrameRate() ? this.p.getFrameRate() : 60;\n        this.totalsFrames = frameRate * lifetime;\n        this.currentFrame = 1;\n    }\n\n    draw() {\n        if(this.canDraw && this.pointIndex < 1.0) {\n            const fill = this.p.lerpColor(this.fromColour, this.toColour, this.pointIndex),\n                alpha = this.currentFrame % 2 ? 100 : 0;\n            fill.setAlpha(alpha)\n            this.p.fill(fill);\n            this.p.noStroke();\n            for (let i = 0; i < 1000 / this.totalsFrames; i++) {\n                this.x = this.beginX + this.pointIndex * this.distX;\n                this.y = this.beginY + this.p.pow(this.pointIndex, 4) * this.distY;\n                this.p.ellipse(this.x, this.y, this.p.height/ 64, this.p.height/ 64);\n                this.pointIndex += 0.001;    \n            }\n            this.currentFrame++;\n        }\n        \n    }\n}","export default __webpack_public_path__ + \"static/media/lines-no-2.9c655af5.ogg\";","export default __webpack_public_path__ + \"static/media/lines-no-2.33ebf3bc.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport ShuffleArray from './functions/ShuffleArray.js';\nimport AnimatedLine from './classes/AnimatedLine.js';\nimport AnimatedLineSegments from './classes/AnimatedLineSegments.js';\n\nimport audio from \"../audio/lines-no-2.ogg\";\nimport midi from \"../audio/lines-no-2.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.tempo = 101;\n\n        p.barAsSeconds = 60 / p.tempo * 4;\n\n        p.grid = [];\n\n        p.randomColours = [];\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result);\n                    const noteSet1 = result.tracks[3].notes; // Synth 1 - Harponic\n                    const noteSet2 = result.tracks[3].notes; // Synth 1 - Harponic \n                    // const noteSet2 = result.tracks[4].notes; // Sampler 1 Copy - Organ B3FilWhMod\n                    //const noteSet2 = result.tracks[5].notes; // Sampler 2 - Dodger Bass\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.animatedLinesDrawings1 = [];\n\n        p.animatedLinesDrawings2 = [];\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.background(0);\n            p.rectMode(p.CENTER);\n            const randomColor = require('randomcolor');\n            p.randomColours = randomColor({\n                luminosity: 'bright',\n                format: 'rgb',\n                count: 15\n            });\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n                for (let i = 0; i < p.animatedLinesDrawings1.length; i++) {\n                    const lineSet = p.animatedLinesDrawings1[i],\n                        { scale, translateX, translateY, lines } = lineSet;\n                    p.push();\n                    p.translate(translateX, translateY);\n                    p.scale(scale);\n                    for (let j = 0; j < lines.length; j++) {\n                        const line = lines[j];\n                        line.draw();\n                    }\n                    p.translate(-translateX, -translateY);\n                    p.pop();\n                }\n\n                for (let i = 0; i < p.animatedLinesDrawings2.length; i++) {\n                    const lineSet = p.animatedLinesDrawings2[i],\n                        { scale, translateX, translateY, lines } = lineSet;\n                    p.push();\n                    p.translate(translateX, translateY);\n                    p.scale(scale);\n                    for (let j = 0; j < lines.length; j++) {\n                        const line = lines[j];\n                        line.draw();\n                    }\n                    p.translate(-translateX, -translateY);\n                    p.pop();\n                }\n            }\n            \n        }\n\n        p.beginX = 0;\n        p.beginY = 0;\n        p.endX = 0;\n        p.endY = 0;\n        p.currentIndex = 0;        \n\n        p.executeCueSet1 = (note) => {\n            const { currentCue } = note;\n            if(currentCue % 15 === 1){\n                const randomColor = require('randomcolor');\n                p.randomColours = randomColor({\n                    luminosity: 'bright',\n                    format: 'rgb',\n                    count: 15\n                });\n                \n                if(currentCue > 1){\n                    p.currentIndex++;\n                }\n                p.currentCell = p.grid[p.currentIndex % 4];\n                p.beginX = p.random(0, p.width); \n                p.beginY = p.random(0, p.height); \n            }\n            if(typeof p.animatedLinesDrawings1[p.currentIndex] === 'undefined'){\n                p.animatedLinesDrawings1[p.currentIndex] = {\n                    scale: p.random(0.05, 0.2),\n                    translateX: p.random(0, p.width - p.width / 4),\n                    translateY: p.random(0, p.height - p.height / 4),\n                    lines: []\n                };\n            }\n            p.endX = p.random(0, p.width); \n            p.endY = p.random(0, p.height); \n            p.animatedLinesDrawings1[p.currentIndex].lines.push(\n                new AnimatedLine(\n                    p,\n                    p.beginX,\n                    p.beginY,\n                    p.endX,\n                    p.endY,\n                    note.duration,\n                    p.randomColours[note.currentCue % 15],\n                    p.randomColours[note.currentCue % 15 === 14 ? 0 : (note.currentCue % 15 + 1)],\n                )\n            );\n            p.beginX = p.endX; \n            p.beginY = p.endY; \n        }\n\n        p.randomColours2 = [];\n        p.beginX2 = 0;\n        p.beginY2 = 0;\n        p.endX2 = 0;\n        p.endY2 = 0;\n        p.currentIndex2 = 0;   \n\n        p.executeCueSet2 = (note) => {\n            const { currentCue } = note;\n            if(currentCue > 90){\n                if(currentCue % 15 === 1){\n                    const randomColor = require('randomcolor');\n                    p.randomColours2 = randomColor({\n                        luminosity: 'bright',\n                        format: 'rgb',\n                        count: 15\n                    });\n                    \n                    if(currentCue > 91){\n                        p.currentIndex2++;\n                    }\n                    p.currentCell = p.grid[p.currentIndex2 % 4];\n                    p.beginX2 = p.random(0, p.width); \n                    p.beginY2 = p.random(0, p.height); \n                }\n                if(typeof p.animatedLinesDrawings2[p.currentIndex2] === 'undefined'){\n                    p.animatedLinesDrawings2[p.currentIndex2] = {\n                        scale: p.random(0.2, 0.4),\n                        translateX: p.random(0, p.width - p.width / 4),\n                        translateY: p.random(0, p.height - p.height / 4),\n                        lines: []\n                    };\n                }\n                p.endX2 = p.random(0, p.width); \n                p.endY2 = p.random(0, p.height); \n                p.animatedLinesDrawings2[p.currentIndex2].lines.push(\n                    new AnimatedLineSegments(\n                        p,\n                        p.beginX2,\n                        p.beginY2,\n                        p.endX2,\n                        p.endY2,\n                        note.duration,\n                        p.randomColours2[note.currentCue % 15],\n                        p.randomColours2[note.currentCue % 15 === 14 ? 0 : (note.currentCue % 15 + 1)],\n                    )\n                );\n                p.beginX2 = p.endX2; \n                p.beginY2 = p.endY2; \n            }\n        }\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}